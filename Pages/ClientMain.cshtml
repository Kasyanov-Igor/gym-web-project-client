@page
@using System.Globalization
@using Model.Entities
@using gym_project_business_logic.Model
@model GymProjectClient.Pages.ClientMainModel
@{
}

<h1>@Model.Client.Name Welicome</h1>

<div class="form-group mb-3">
	<form method="post">
		<select asp-for="SelectedCoachId" asp-items="Model.Coaches" onchange="this.form.submit()">
			<option value="">-- Выберите тренера --</option>
		</select>
		<select asp-for="Date" asp-items="Model.DateOptions" onchange="this.form.submit()">
			<option value="">-- Выберите дату --</option>
		</select>
	</form>
</div>

<div>
	<table class="bg-light w-100">
		<thead>
			<tr>
				<th>Время / Дата</th>
				@for (int i = 0; i < 7; i++)
				{
					var date = Model.Date.AddDays(i);
					<th>
						@date.ToString("dd MMMM", new CultureInfo("ru-RU"))<br />
						@date.ToString("dddd", new CultureInfo("ru-RU"))
					</th>
				}
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>11:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 11, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.Places > 0)
									{
										<div class="card shadow" data-bs-toggle="modal" data-bs-target="#modelRecord" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												<p class="card-text mb-1">
													@(work.Places > 1 ? $"Свободные места: {work.Places}" :
															work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
												</p>
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
			<tr>
				<td>14:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 14, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.Places > 0)
									{
										<div class="card shadow" data-bs-toggle="modal" data-bs-target="#modelRecord" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
			<tr>
				<td>17:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 17, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.Places > 0)
									{
										<div class="card shadow" data-bs-toggle="modal" data-bs-target="#modelRecord" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
			<tr>
				<td>19:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 19, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.Places > 0)
									{
										<div class="card shadow" data-bs-toggle="modal" data-bs-target="#modelRecord" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
		</tbody>
	</table>
</div>

<h1>@Model.Client.Name ТРЕНИРОВКИ</h1>

<div>
	<table class="bg-light w-100">
		<thead>
			<tr>
				<th>Время / Дата</th>
				@for (int i = 0; i < 7; i++)
				{
					var date = Model.Date.AddDays(i);
					<th>
						@date.ToString("dd MMMM", new CultureInfo("ru-RU"))<br />
						@date.ToString("dddd", new CultureInfo("ru-RU"))
					</th>
				}
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>11:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 11, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.ClientName == Model.Client.Name)
									{
										<div class="card shadow" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
			<tr>
				<td>14:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 14, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.ClientName == Model.Client.Name)
									{
										<div class="card shadow" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
			<tr>
				<td>17:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 17, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.ClientName == Model.Client.Name)
									{
										<div class="card shadow" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
			<tr>
				<td>19:00</td>
				@for (int i = 0; i < 7; i++)
				{
					var currentDate = Model.Date.AddDays(i);
					var slotTime = new DateTime(currentDate.Year, currentDate.Month, currentDate.Day, 19, 0, 0);
					<td class="time-slot">
						<div class="availability-input">
							@if (Model.Workouts != null)
							{
								foreach (var work in Model.Workouts)
								{
									if (work.BookingTime == slotTime && work.ClientName == Model.Client.Name)
									{
										<div class="card shadow" work-id="@work.Id" client-name="@Model.Client.Name"
											 data-title="@work.Title" data-coach="@work.NameCoach" data-duration="@work.DurationMinutes" data-gym="@work.GymId" data-description="@work.Description">
											<div class="card-body">
												<h5 class="card-title">@work.Title</h5>
												<h6 class="card-subtitle mb-2 text-muted">@work.NameCoach</h6>
												<p class="card-text mb-1"><strong>Длительность:</strong> @work.DurationMinutes мин.</p>
												<p class="card-text mb-1"><strong>Зал №:</strong> @work.GymId</p>
												@(work.Places > 1 ? $"Свободные места: {work.Places}" :
																			work.Places == 1 ? "Индивидуальная тренировка" : "Свободных мест нет")
											</div>
										</div>
									}
								}
							}
						</div>
					</td>
				}
			</tr>
		</tbody>
	</table>
</div>

<div class="modal fade" id="modelRecord" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="eventModalLabel">Детали записи</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
			</div>
			<div class="modal-body">
				<p><strong>Вид занятия:</strong> <span id="modalTitle"></span></p>
				<p><strong>Тренер:</strong> <span id="modalCoach"></span></p>
				<p><strong>Длительность:</strong> <span id="modalDuration"></span> минут</p>
				<p><strong>Зал:</strong> <span id="modalGym"></span></p>
				<p><strong>Описание:</strong> <span id="modalDescription"></span></p>
			</div>
			<div class="modal-footer">
				<button type="submit" class="btn btn-danger" id="bookButton">Бронирование</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
			</div>
		</div>
	</div>
</div>



<style>
	.availability-input {
		width: 100%; /* Убедиться, что этот контейнер занимает всю доступную ширину td */
		height: 100%; /* Опционально, если вы хотите, чтобы он заполнял высоту */
		box-sizing: border-box; /* Включает padding и border в общую ширину/высоту */
		/* Если внутри .availability-input может быть несколько карточек,
			   и вы хотите, чтобы они располагались в строку и переносились: */
		display: flex;
		flex-wrap: wrap;
		gap: 5px; /* Промежуток между карточками */
		align-items: flex-start; /* Выравнивание элементов по верху */
		justify-content: flex-start; /* Выравнивание элементов по началу */
	}


	.shadow {
		width: 15rem;
		cursor: pointer;
	}

	th, td {
		border: 1px solid #ddd;
		padding: 12px;
		text-align: center;
		vertical-align: middle;
	}

	th {
		background-color: #e0e0e0;
		color: #333;
		font-weight: bold;
		white-space: nowrap;
	}

	td:first-child { /* Стиль для колонки времени */
		background-color: #f0f0f0;
		font-weight: bold;
		color: #555;
	}

	.time-slot {
		height: 100px;
		transition: background-color 0.2s ease;
	}

		.time-slot:hover {
			background-color: #e9f7ef; /* Легкий эффект при наведении */
		}

	.available {
		background-color: #d4edda; /* Пример стиля для "свободно" */
	}

	.booked {
		background-color: #f8d7da; /* Пример стиля для "занято" */
	}

</style>